% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_binomial.R
\name{count_binomial}
\alias{count_binomial}
\title{Number of Product-Binomial Prior/Posterior Samples in Polytope}
\usage{
count_binomial(k, n, A, b, V, map, prior = c(1, 1), M = 10000, steps,
  batch = 10000, start = -1, progress = TRUE)
}
\arguments{
\item{k}{the number of Option B choices.
The default \code{k=n=rep(0,ncol(A))} is equivalent to sampling from the prior.}

\item{n}{the number of choices per item type.}

\item{A}{a matrix with one row for each linear inequality constraint and one
column for each of the free parameters. The parameter space is defined
as all probabilities \code{x} that fulfill the order constraints  \code{A*x <= b}.}

\item{b}{a vector of the same length as the number of rows of \code{A}.}

\item{V}{a matrix of vertices (one per row) that define the polytope of
admissible parameters as the convex hull over these points
(if provided, \code{A} and \code{b} are ignored). Note that this method
is comparatively slow since it solves a linear-programming problem for each point (Fukuda, 2004).}

\item{map}{optional: numeric vector of the same length as \code{k} with integers mapping the frequencies \code{k} to the free parameters/columns of \code{A}/\code{V}, thereby allowing for equality constraints (e.g., \code{map=c(1,1,2,2)}). Reversed probabilities \code{1-p} are coded by negative integers. Guessing probabilities of .50 are encoded by zeros. The default assumes different parameters for each item type: \code{map=1:ncol(A)}}

\item{prior}{a vector with two positive numbers defining the shape parameters of the beta prior distributions for each binomial rate parameter.}

\item{M}{number of posterior samples drawn from the encompassing model}

\item{steps}{integer vector that indicates at which rows the matrix \code{A} is split for a stepwise computation of the Bayes factor (see details). In this case, \code{M} can be a vector with the number of samples drawn in each step from the (partially) order-constrained models using Gibbs sampling}

\item{batch}{size of the batches into which computations are split to reduce memory load}

\item{start}{only if \code{steps} is defined: a vector with starting values
within the polytope. If \code{steps = -1}, a random starting value is used
(but a poitn within the polytope might not be found if the order constraints are strong).}

\item{progress}{whether a progress bar should be shown.}
}
\value{
a list with the elements
\itemize{
    \item\code{integral}: estimated probability that samples are in polytope
    \item\code{count}: number of samples in polytope
    \item\code{M}: total number of samples
    \item\code{const_map}: logarithm of the binomial constants that have to be considered due to equality constraints
}
}
\description{
Draws prior/posterior samples for product-binomial data and counts how many samples are
inside the convex polytope defined by
(1) the inequalities A*x <= b or
(2) the convex hull over the vertices V.
}
\details{
Useful to compute the encompassing Bayes factor for testing order constraints (see \code{\link{bf_binomial}}; Hojtink, 2011).

The stepwise computation of the Bayes factor proceeds as follows:
If the steps are defined as \code{steps=c(5,10)}, the BF is computed in three steps by comparing:
(1) Unconstrained model vs. inequalities in \code{A[1:5,]};
(2) use posterior based on inequalities in \code{A[1:5,]} and check inequalities \code{A[6:10,]};
(3) sample from A[1:10,] and check inequalities in \code{A[11:nrow(A),]} (i.e., all inequalities).
}
\examples{
# linear order constraint:
# x1 < x2 < .... < x6 < .50
A <- matrix(c(1, -1, 0, 0, 0, 0,
              0, 1, -1, 0, 0, 0,
              0, 0, 1, -1, 0, 0,
              0, 0, 0, 1, -1, 0,
              0, 0, 0, 0, 1, -1,
              0, 0, 0, 0, 0, 1),
            ncol = 6, byrow = TRUE)
b <- c(0, 0, 0, 0, 0, .50)

k <- c(0, 3, 2, 5, 3, 7)
n <- rep(10, 6)

# check whether specific vector is in polytope:
A \%*\% c(.05, .1, .12, .16, .19, .23) <= b

# count prior samples and compare to analytical result
prior <- count_binomial(0, 0, A, b, M = 5e5)
prior
(.50)^6 / factorial(6)

# count posterior samples and get Bayes factor
posterior <- count_binomial(k, n, A, b,
                            M=c(1e5, 2e4), steps = 2)
posterior$integral / prior$integral  # Bayes factor
count_to_bf(posterior, prior)
}
\references{
Hoijtink, H. (2011). Informative Hypotheses: Theory and Practice for Behavioral and Social Scientists. Boca Raton, FL: Chapman & Hall/CRC.

Fukuda, K. (2004). Is there an efficient way of determining whether a given point q is in the convex hull of a given finite set S of points in Rd? Retrieved from \url{http://www.cs.mcgill.ca/~fukuda/soft/polyfaq/node22.html}
}
