% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_nml.R
\name{maximize_ll}
\alias{maximize_ll}
\title{Maximum-likelihood Estimate}
\usage{
maximize_ll(k, n, strategy, n.fit = 5)
}
\arguments{
\item{k}{vector with observed frequencies for Option B}

\item{n}{vector with the number of choices per item type}

\item{strategy}{a list that defines the predictions of a strategy, see\code{\link{predict_multiattribute}}}

\item{n.fit}{number of repeated fitting runs with random starting values}
}
\value{
a \code{strategy} object (a list) with the entries:
\itemize{
\item{\code{pattern}: }{a numeric vector encoding the predicted choice pattern by the sign
       (negative = Option A, positive = Option B, 0 = guessing).
      Identical error probabilities are encoded by using the same absolute number
      (e.g., \code{c(-1,1,1)} defines one error probability with A,B,B predictions).}
\item{\code{c}}{upper boundary of error probabilities}
\item{\code{ordered}: }{whether error probabilities are linearly ordered by their absolute value in \code{pattern} (largest error: smallest absolute number)}
\item{\code{prior}: }{a numeric vector with two positive values specifying the shape parameters of the beta prior distribution (truncated to the interval \code{[0,c]}}
\item{\code{label}: }{strategy label}
}
}
\description{
Get ML estimate (possible weighted by luckinesss function).
}
\examples{
k <- c(3,5,19, 9)  # frequency Option B
n <- rep(20, 4)    # number of choices per type

# deterministic strategy: A,A,B,guess  [e<.50]
s1 <- list(pattern = c(-1, -1, 1, 0),
           c = .5, ordered = FALSE, prior = c(1,1))
maximize_ll(k, n, s1)  # = (3+5+20-19)/(3*20)

# probabilistic strategy:  A,A,A,B  [e1<e2<e3<e4<.50]
s2 <- list(pattern = c(-1, -2, -3, 4),
           c = .5, ordered = TRUE, prior = c(1,1))
maximize_ll(k, n, s2)
}
