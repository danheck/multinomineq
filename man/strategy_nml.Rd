% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/strategy_nml.R
\name{strategy_cnml}
\alias{strategy_cnml}
\alias{strategy_nml}
\title{Strategy Classification with Normalized Maximum Likelihood (NML)}
\usage{
strategy_cnml(strategy, n, n.fit = 3, cores = 1)

strategy_nml(k, n, strategies, n.fit = 5, cores = 1)
}
\arguments{
\item{strategy}{a list that defines the predictions of a strategy, see\code{\link{strategy_multiattribute}}.}

\item{n}{vector with the number of choices per item type.}

\item{n.fit}{number of repeated fitting runs with random starting values}

\item{cores}{number of processing units to be used}

\item{k}{observed frequencies of Option B.
Either a vector or a matrix/data frame (one person per row).}

\item{strategies}{list with strategies including the pre-computed
NML complexity values (by using \code{strategy_cnml}).
Note that the sample size \code{n} must match.}
}
\value{
a \code{strategy} object (a list) with the entries:
\itemize{
\item{\code{pattern}: }{a numeric vector encoding the predicted choice pattern by the sign
       (negative = Option A, positive = Option B, 0 = guessing).
      Identical error probabilities are encoded by using the same absolute number
      (e.g., \code{c(-1,1,1)} defines one error probability with A,B,B predictions).}
\item{\code{c}}{upper boundary of error probabilities}
\item{\code{ordered}: }{whether error probabilities are linearly ordered by their absolute value in \code{pattern} (largest error: smallest absolute number)}
\item{\code{prior}: }{a numeric vector with two positive values specifying the shape parameters of the beta prior distribution (truncated to the interval \code{[0,c]}}
\item{\code{label}: }{strategy label (optional)}
}
}
\description{
Computes the normalized maximum likelihood (NML), a model-selection method
based on the minimum description length principle. Essentially, NML penalizes
model complexity by summing the maximum likelihood values for all possible data vectors.
}
\details{
Note that the prior parameters in \code{strategy} actually define the NML luckiness function.
(i.e., parameters of a beta distribution).
For luckiness NML, \code{prior = c(1.5, 1.5)} is asymptotically equivalent to
a uniform prior \code{prior = c(1, 1)} for the Bayes factor
}
\examples{
### strategy predictions
# strategy: A/A/B with error probabilities {e2,e3,e1<.20}
s1 <- list(pattern = c(-3, -1, +2), c = .2,
           ordered = FALSE, prior = c(1,1))
# predict: A/A/B with ordered errors {e2<e3<e1<.50}
s2 <- list(pattern = c(-3, -1, +2), c = .5,
           ordered = TRUE, prior = c(1,1))

### compute NML complexity terms (depends on samples size!)
n <- c(2, 1, 2)
c1 <- strategy_cnml(s1, n)
c2 <- strategy_cnml(s2, n)

### NML model selection
nml <- strategy_nml(c(0,1,1), n, list(c1, c2))
model_weights(-nml)
}
